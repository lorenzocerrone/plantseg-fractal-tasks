{
  "manifest_version": "2",
  "task_list": [
    {
      "name": "Import from PlantSeg H5",
      "executable_non_parallel": "import_from_plantseg_h5.py",
      "meta_non_parallel": {
        "cpus_per_task": 1,
        "mem": 4000
      },
      "args_schema_non_parallel": {
        "title": "ImportFromPlantsegH5",
        "type": "object",
        "properties": {
          "zarr_urls": {
            "title": "Zarr Urls",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of URLs to the OME-Zarr image."
          },
          "zarr_dir": {
            "title": "Zarr Dir",
            "type": "string",
            "description": "Absolute path to the OME-Zarr image."
          },
          "h5_path": {
            "title": "H5 Path",
            "type": "string",
            "description": "Can be the absolute path to the PlantSeg HDF5 file, a directory containing a bunch of h5 files, or a valid glob pattern."
          },
          "raw_key": {
            "title": "Raw Key",
            "default": "raw",
            "type": "string",
            "description": "Key of the raw image in the HDF5 file."
          },
          "label_key": {
            "title": "Label Key",
            "type": "string",
            "description": "Key of the label image in the HDF5 file."
          },
          "voxel_size_model": {
            "title": "Voxel Size Model",
            "type": "array",
            "items": {
              "$ref": "#/definitions/AxisModel"
            },
            "description": "List of VoxelsizeModel objects, containing the element size, axis name and unit."
          },
          "levels": {
            "title": "Levels",
            "default": 1,
            "type": "integer",
            "description": "Number of levels in the multiscale image."
          }
        },
        "required": [
          "zarr_urls",
          "zarr_dir",
          "h5_path"
        ],
        "additionalProperties": false,
        "definitions": {
          "AxisModel": {
            "title": "AxisModel",
            "description": "AxisModel is a Pydantic model for the voxel size of an image.",
            "type": "object",
            "properties": {
              "axis_name": {
                "title": "Axis Name",
                "type": "string"
              },
              "element_size": {
                "title": "Element Size",
                "type": "number"
              },
              "unit": {
                "title": "Unit",
                "type": "string"
              },
              "scaling_factor": {
                "title": "Scaling Factor",
                "default": 1.0,
                "type": "number"
              }
            },
            "required": [
              "axis_name",
              "element_size",
              "unit"
            ]
          }
        }
      },
      "docs_info": "## import_from_plantseg_h5\nThis function imports a raw image and a label image from a PlantSeg HDF5 file\nto a OME-Zarr image.\n"
    },
    {
      "name": "Run Plantseg predictions",
      "executable_parallel": "plantseg_workflow.py",
      "meta_parallel": {
        "cpus_per_task": 1,
        "mem": 4000
      },
      "args_schema_parallel": {
        "title": "PlantsegWorkflow",
        "type": "object",
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "The URL of the Zarr file."
          },
          "channel": {
            "title": "Channel",
            "type": "integer",
            "description": "Missing description"
          },
          "preprocessing_model": {
            "$ref": "#/definitions/PlantSegPreprocessingModel",
            "title": "Preprocessing_Model",
            "description": "Missing description"
          },
          "prediction_model": {
            "$ref": "#/definitions/PlantSegPredictionsModel",
            "title": "Prediction_Model",
            "description": "Missing description"
          },
          "segmentation_model": {
            "$ref": "#/definitions/PlantSegSegmentationModel",
            "title": "Segmentation_Model",
            "description": "Missing description"
          }
        },
        "required": [
          "zarr_url",
          "channel",
          "preprocessing_model",
          "prediction_model",
          "segmentation_model"
        ],
        "additionalProperties": false,
        "definitions": {
          "PlantSegPreprocessingModel": {
            "title": "PlantSegPreprocessingModel",
            "description": "Define the optional preprocessing steps to apply to the raw image.",
            "type": "object",
            "properties": {
              "rescaling_factor": {
                "title": "Rescaling Factor",
                "type": "array",
                "minItems": 3,
                "maxItems": 3,
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "sigma_gaussian_filter": {
                "title": "Sigma Gaussian Filter",
                "type": "number"
              },
              "manual_cropping": {
                "title": "Manual Cropping",
                "type": "string"
              },
              "skip": {
                "title": "Skip",
                "default": true,
                "type": "boolean"
              }
            }
          },
          "ModelsPool": {
            "title": "ModelsPool",
            "description": "Select if the model is sourced from PlantSegZoo or BioImageIO.",
            "enum": [
              "PlantSegZoo",
              "BioImageIO"
            ],
            "type": "string"
          },
          "DynamicallyGeneratedModel": {
            "title": "DynamicallyGeneratedModel",
            "description": "Select a model from the PlantSeg Zoo.",
            "enum": [
              "generic_confocal_3D_unet",
              "generic_light_sheet_3D_unet",
              "confocal_3D_unet_ovules_ds1x",
              "confocal_3D_unet_ovules_ds2x",
              "confocal_3D_unet_ovules_ds3x",
              "confocal_2D_unet_ovules_ds2x",
              "lightsheet_3D_unet_root_ds1x",
              "lightsheet_3D_unet_root_ds2x",
              "lightsheet_3D_unet_root_ds3x",
              "lightsheet_2D_unet_root_ds1x",
              "lightsheet_3D_unet_root_nuclei_ds1x",
              "lightsheet_2D_unet_root_nuclei_ds1x",
              "confocal_2D_unet_sa_meristem_cells",
              "confocal_3D_unet_sa_meristem_cells",
              "lightsheet_3D_unet_mouse_embryo_cells",
              "confocal_3D_unet_mouse_embryo_nuclei",
              "PlantSeg_3Dnuc_platinum"
            ],
            "type": "string"
          },
          "DynamicBioIOModels": {
            "title": "DynamicBioIOModels",
            "description": "Select a model from the BioImageIO Zoo.",
            "enum": [
              "affable-shark",
              "ambitious-ant",
              "ambitious-sloth",
              "amiable-crocodile",
              "chatty-frog",
              "conscientious-seashell",
              "courteous-otter",
              "creative-panda",
              "determined-chipmunk",
              "discreet-rooster",
              "easy-going-sauropod",
              "efficient-chipmunk",
              "emotional-cricket",
              "fearless-crab",
              "hiding-blowfish",
              "hiding-tiger",
              "humorous-owl",
              "impartial-shark",
              "impartial-shrimp",
              "independent-shrimp",
              "joyful-deer",
              "kind-seashell",
              "laid-back-lobster",
              "loyal-parrot",
              "loyal-squid",
              "modest-octopus",
              "naked-microbe",
              "nice-peacock",
              "noisy-fish",
              "noisy-hedgehog",
              "non-judgemental-eagle",
              "organized-badger",
              "organized-cricket",
              "passionate-t-rex",
              "pioneering-rhino",
              "placid-llama",
              "polite-pig",
              "powerful-chipmunk",
              "powerful-fish",
              "shivering-raccoon",
              "straightforward-crocodile",
              "thoughtful-turtle",
              "wild-whale",
              "willing-hedgehog"
            ],
            "type": "string"
          },
          "Device": {
            "title": "Device",
            "description": "An enumeration.",
            "enum": [
              "cpu",
              "cuda"
            ],
            "type": "string"
          },
          "PlantSegPredictionsModel": {
            "title": "PlantSegPredictionsModel",
            "description": "Input model for PlantSeg predictions.",
            "type": "object",
            "properties": {
              "model_source": {
                "default": "PlantSegZoo",
                "allOf": [
                  {
                    "$ref": "#/definitions/ModelsPool"
                  }
                ],
                "title": "Model_Source"
              },
              "plantsegzoo_name": {
                "default": "generic_confocal_3D_unet",
                "allOf": [
                  {
                    "$ref": "#/definitions/DynamicallyGeneratedModel"
                  }
                ],
                "title": "Plantsegzoo_Name"
              },
              "bioimageio_name": {
                "default": "affable-shark",
                "allOf": [
                  {
                    "$ref": "#/definitions/DynamicBioIOModels"
                  }
                ],
                "title": "Bioimageio_Name"
              },
              "device": {
                "default": "cuda",
                "allOf": [
                  {
                    "$ref": "#/definitions/Device"
                  }
                ],
                "title": "Device"
              },
              "patch": {
                "title": "Patch",
                "default": [
                  80,
                  160,
                  160
                ],
                "type": "array",
                "minItems": 3,
                "maxItems": 3,
                "items": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "save_results": {
                "title": "Save Results",
                "default": false,
                "type": "boolean"
              },
              "skip": {
                "title": "Skip",
                "default": false,
                "type": "boolean"
              }
            }
          },
          "SegmentationType": {
            "title": "SegmentationType",
            "description": "An enumeration.",
            "enum": [
              "gasp",
              "mutex_ws",
              "multicut",
              "dt_watershed"
            ],
            "type": "string"
          },
          "PlantSegSegmentationModel": {
            "title": "PlantSegSegmentationModel",
            "description": "Input model for PlantSeg segmentations.",
            "type": "object",
            "properties": {
              "ws_threshold": {
                "title": "Ws Threshold",
                "default": 0.5,
                "type": "number"
              },
              "segmentation_type": {
                "default": "gasp",
                "allOf": [
                  {
                    "$ref": "#/definitions/SegmentationType"
                  }
                ],
                "title": "Segmentation_Type"
              },
              "beta": {
                "title": "Beta",
                "default": 0.6,
                "type": "number"
              },
              "post_minsize": {
                "title": "Post Minsize",
                "default": 100,
                "type": "integer"
              },
              "skip": {
                "title": "Skip",
                "default": false,
                "type": "boolean"
              }
            }
          }
        }
      },
      "docs_info": "## plantseg_workflow\nThis function imports a raw image and a label image from a PlantSeg HDF5 file\nto a OME-Zarr image.\n"
    }
  ],
  "has_args_schemas": true,
  "args_schema_version": "pydantic_v1"
}
